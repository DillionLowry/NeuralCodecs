<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
	  <IncludeReferencedProjects>true</IncludeReferencedProjects>
	  <GenerateDocumentationFile>true</GenerateDocumentationFile>
	  <IncludeSymbols>true</IncludeSymbols>
	  <SymbolPackageFormat>snupkg</SymbolPackageFormat>
	  <Title>NeuralCodecs</Title>
	  <PackageId>NeuralCodecs</PackageId>
	  <Version>0.1.1</Version>
	  <Authors>Dillion Lowry</Authors>
	  <Company></Company>
	  <Description>Neural audio codec implementations using TorchSharp for .NET, supporting SNAC.</Description>
	  <PackageTags>audio;codec;neural-network;pytorch;snac;compression</PackageTags>
	  <PackageIcon>nc_logo.png</PackageIcon>
	  <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
	  <Copyright>Dillion Lowry</Copyright>
	  <PackageProjectUrl>https://github.com/DillionLowry/NeuralCodecs</PackageProjectUrl>
	  <RepositoryUrl>https://github.com/DillionLowry/NeuralCodecs</RepositoryUrl>
	  <PackageReadmeFile>README.md</PackageReadmeFile>
	  <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>	  
	  <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	  <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\nc_logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NeuralCodecs.Core\NeuralCodecs.Core.csproj" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="NAudio" Version="2.2.1" />
    <PackageReference Include="TorchSharp" Version="0.103.1" />
    <PackageReference Include="TorchSharp.PyBridge" Version="1.4.3" />
  </ItemGroup>
	<PropertyGroup>
		<TargetsForTfmSpecificBuildOutput>
			$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage
		</TargetsForTfmSpecificBuildOutput>		
	</PropertyGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
		<ItemGroup>
			<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
		</ItemGroup>
	</Target>
</Project>
